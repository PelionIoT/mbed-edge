JOBS:=$(shell nproc)

.PHONY: clean build-test build-test-byoc build-test-devmode \
	run-tests run-coverage run-tests-with-valgrind \
	generate-cli-parsers

clean:
	rm -rf build-test config/edge_version_info.h

build:
	mkdir -p build-test

generate-cli-parsers:
	cd edge-core && ./gen_docopt.sh

lib/mbed-cloud-client/source/update_default_resources.c: lib/mbed-cloud-client
	manifest-dev-tool init 

build-test-byoc: lib/mbed-cloud-client/source/update_default_resources.c generate-cli-parsers build
	mkdir -p build-test
	cd build-test && cmake -DBUILD_TARGET=test -DBYOC_MODE=ON -DFOTA_ENABLE=OFF -DFIRMWARE_UPDATE=ON -DTRACE_LEVEL=DEBUG -DCMAKE_BUILD_TYPE=Debug .. && make -j ${JOBS} && cd ..

build-test-devmode: lib/mbed-cloud-client/source/update_default_resources.c generate-cli-parsers build
	mkdir -p build-test-devmode
	cd build-test-devmode && cmake -DBUILD_TARGET=test -DDEVELOPER_MODE=ON -DTRACE_LEVEL=DEBUG -DCMAKE_BUILD_TYPE=Debug .. && make -j ${JOBS} && cd ..

run-tests: build-test-byoc
	find ./build-test/bin -name "*-test" | xargs -n1 -I{} sh -c '{} || exit 255'

run-tests-with-valgrind: build-test-byoc
	find ./build-test/bin -name "*-test" | xargs -n1 -I{} sh -c 'valgrind --track-origins=yes --num-callers=100 --leak-check=full --show-reachable=yes --suppressions=./valgrind-unit-tests.supp --error-exitcode=255 {} || exit 255'

run-coverage: run-tests
	cd ./build-test && ../test/generate_coverage.sh .. && cd ..
	echo "\033[0;33mCoverage report is at ./build-test/coverage.html/index.html\033[0m"
